#pragma warning (disable:4996)
#include"BinartTree.h"
void main()
{
	Status i;
	int j;
	position p;
	TElemType e;
	SqBiTree T, s;
	InitBiTree(T);
	CreateBiTree(T);
	printf("建立二叉树后，树为空吗？%d（1 空，0 非空），树的深度=%d\n", BiTreeEmpty(T), BiTreeDepth(T));

	i = Root(T, e);
	if (i!=-1)
		printf("二叉树的根为: %2d\n", e);
	else
		printf("数空，无根\n");

	printf("层序遍历二叉树:\n");
	LevelOrderTraverse(T, visit);

	printf("中序遍历二叉树:\n");
	InOrderTraverse(T, visit);

	printf("后序遍历二叉树:\n");
	PostOrderTraverse(T, visit);

	printf("请输入待修改结点的层号，本层序号:\n");
	scanf("%d %d", &p.level, &p.order);
	e = Value(T, p);
	printf("待修改结点的原值为%d,请输入新值:\n", e);
	scanf("%d", &e);
	Assign(T, p, e);
	printf("先序遍历二叉树:\n");
	PreOrderTraverse(T, visit);

	printf("结点%d的双亲为%d\n", e, Parent(T, e));
	printf("左右孩子分别为:%d %d\n", LeftChild(T, e), RightChild(T, e));
	printf("左右兄第分别为:%d %d\n", LeftSibling(T, e), RightSibling(T, e));

	InitBiTree(s);
	printf("建立右子树为空的树s:\n");
	CreateBiTree(s);
	printf("树s插到树T中，请输入树T中树的双亲结点s为左（0）右（1）子树:\n");
	scanf("%d %d", &e, &j);
	InsertChild(T, e, j, s);

	print(T);
	printf("删除子树，请输入其根结点的双亲结点，根据j的值确定树s是e的左或右子树:\n");
	scanf("%d %d %d", &p.level, &p.order, &j);
	DeleteChild(T, p, j);
	print(T);
	InitBiTree(T);//删除,同样操作
	printf("删除二叉树后，树为空吗？%d（1 空，0 非空），树的深度=%d\n", BiTreeEmpty(T), BiTreeDepth(T));
	i = Root(T, e);
	if (i!=-1)
		printf("二叉树的根为:%d\n", e);
	else
		printf("树空，无根\n");
}